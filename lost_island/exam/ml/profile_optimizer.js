// –ü—Ä–æ—Å—Ç–∏–π –∞–Ω–∞–ª—ñ–∑–∞—Ç–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∫–æ–¥—É
function optimizeCode(code) {
    console.log("[ML] –ê–Ω–∞–ª—ñ–∑ –∫–æ–¥—É...");
    
    // –î–µ—Ç–µ–∫—Ç—É—î–º–æ –Ω–µ–µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ —à–∞–±–ª–æ–Ω–∏
    const warnings = [];
    if (code.includes("for(let i=0")) {
        warnings.push("üîç –ó–∞–º—ñ–Ω—ñ—Ç—å 'for' –Ω–∞ 'forEach' –∞–±–æ 'map' –¥–ª—è –º–∞—Å–∏–≤—ñ–≤");
    }
    if (code.includes("==")) {
        warnings.push("üîç –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ '===' –∑–∞–º—ñ—Å—Ç—å '==' –¥–ª—è —Å—Ç—Ä–æ–≥–æ–≥–æ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è");
    }

    // –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
    const mlResults = document.createElement("div");
    mlResults.innerHTML = `<h3>ü§ñ –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ–π–Ω—ñ –ø–æ—Ä–∞–¥–∏:</h3><ul>${
        warnings.map(w => `<li>${w}</li>`).join("")
    }</ul>`;
    document.getElementById("variables-panel").appendChild(mlResults);
}